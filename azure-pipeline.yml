trigger:
- master

pool:
  name: 'Default'
  demands:
  - agent.name -equals popo

steps:
- script: |
    sudo apt-get update
    wget -c http://security.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2.16_amd64.deb
    apt install ./libssl1.1_1.1.1f-1ubuntu2.16_amd64.deb
    wget -c http://security.ubuntu.com/ubuntu/pool/main/o/openssl/openssl_1.1.1f-1ubuntu2.16_amd64.deb
    apt install ./openssl_1.1.1f-1ubuntu2.16_amd64.deb
    wget https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
    sudo dpkg -i packages-microsoft-prod.deb
    sudo apt-get update
    sudo apt-get install -y dotnet-sdk-5.0
    openssl version
    dotnet --version
  displayName: 'Install Dependencies and Check Versions'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet



- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'drop'
    publishLocation: 'pipeline'

- script: |
    echo "##vso[task.setvariable variable=version]$(Build.BuildId)"
    echo "Incremented Version: $(Build.BuildId)"
  displayName: 'Set and Print Version'
